{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red89\green138\blue67;\red23\green23\blue23;\red202\green202\blue202;
\red183\green111\blue179;\red140\green211\blue254;\red194\green126\blue101;\red70\green137\blue204;\red67\green192\blue160;
\red167\green197\blue152;\red212\green214\blue154;\red109\green109\blue109;\red66\green179\blue255;}
{\*\expandedcolortbl;;\cssrgb\c41569\c60000\c33333;\cssrgb\c11765\c11765\c11765;\cssrgb\c83137\c83137\c83137;
\cssrgb\c77255\c52549\c75294;\cssrgb\c61176\c86275\c99608;\cssrgb\c80784\c56863\c47059;\cssrgb\c33725\c61176\c83922;\cssrgb\c30588\c78824\c69020;
\cssrgb\c70980\c80784\c65882;\cssrgb\c86275\c86275\c66667;\cssrgb\c50196\c50196\c50196;\cssrgb\c30980\c75686\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 https://github.com/tongyy/react-native-draggable\
\
\
\pard\pardeftab720\sl360\partightenfactor0

\f1 \cf2 \cb3 \expnd0\expndtw0\kerning0
// import React, \{ useRef \} from "react";\cf4 \cb1 \
\cf2 \cb3 // import \{ Animated, PanResponder, SafeAreaView, StyleSheet, View \} from "react-native";\cf4 \cb1 \
\
\cf2 \cb3 // const DraggableView = () => \{\cf4 \cb1 \
\cf2 \cb3 //   const pan = useRef(new Animated.ValueXY()).current;\cf4 \cb1 \
\cf2 \cb3 //   const panResponder = PanResponder.create(\{\cf4 \cb1 \
\cf2 \cb3 //     onStartShouldSetPanResponder: () => true,\cf4 \cb1 \
\cf2 \cb3 //     onPanResponderGrant: (e) => \{\cf4 \cb1 \
\cf2 \cb3 //       console.log(e.nativeEvent.locationX);\cf4 \cb1 \
\cf2 \cb3 //       console.log(e.nativeEvent.locationY);\cf4 \cb1 \
\cf2 \cb3 //       // pan.setOffset(\{\cf4 \cb1 \
\cf2 \cb3 //       //   x: e.nativeEvent.locationX,\cf4 \cb1 \
\cf2 \cb3 //       //   y: e.nativeEvent.locationY\cf4 \cb1 \
\cf2 \cb3 //       // \});\cf4 \cb1 \
\cf2 \cb3 //       // Animated.spring(\cf4 \cb1 \
\cf2 \cb3 //       //   pan, // Auto-multiplexed\cf4 \cb1 \
\cf2 \cb3 //       //   \{ toValue: \{ x: e.nativeEvent.locationX, y: e.nativeEvent.locationY \} \} // Back to zero\cf4 \cb1 \
\cf2 \cb3 //       // ).start();\cf4 \cb1 \
\cf2 \cb3 //     \},\cf4 \cb1 \
\cf2 \cb3 //     onPanResponderMove: Animated.event([\cf4 \cb1 \
\cf2 \cb3 //       null,\cf4 \cb1 \
\cf2 \cb3 //       \{\cf4 \cb1 \
\cf2 \cb3 //         dx: pan.x, // x,y are Animated.Value\cf4 \cb1 \
\cf2 \cb3 //         dy: pan.y,\cf4 \cb1 \
\cf2 \cb3 //       \},\cf4 \cb1 \
\cf2 \cb3 //     ]),\cf4 \cb1 \
\cf2 \cb3 //     onPanResponderRelease: (e) => \{\cf4 \cb1 \
\cf2 \cb3 //       Animated.spring(\cf4 \cb1 \
\cf2 \cb3 //         pan, // Auto-multiplexed\cf4 \cb1 \
\cf2 \cb3 //         \{ toValue: \{ x: 0, y: e.nativeEvent.locationY \} \} // Back to zero\cf4 \cb1 \
\cf2 \cb3 //       ).start();\cf4 \cb1 \
\cf2 \cb3 //     \},\cf4 \cb1 \
\cf2 \cb3 //   \});\cf4 \cb1 \
\
\cf2 \cb3 //   return (\cf4 \cb1 \
\cf2 \cb3 //     <View style=\{styles.container\}>\cf4 \cb1 \
\cf2 \cb3 //       <SafeAreaView/>\cf4 \cb1 \
\cf2 \cb3 //       <Animated.View\cf4 \cb1 \
\cf2 \cb3 //         \{...panResponder.panHandlers\}\cf4 \cb1 \
\cf2 \cb3 //         style=\{[pan.getLayout(), styles.box]\}\cf4 \cb1 \
\cf2 \cb3 //       />\cf4 \cb1 \
\cf2 \cb3 //     </View>\cf4 \cb1 \
\cf2 \cb3 //   );\cf4 \cb1 \
\cf2 \cb3 // \};\cf4 \cb1 \
\
\cf2 \cb3 // const styles = StyleSheet.create(\{\cf4 \cb1 \
\cf2 \cb3 //   container: \{\cf4 \cb1 \
\cf2 \cb3 //     flex: 1,\cf4 \cb1 \
\cf2 \cb3 //     // justifyContent: "center",\cf4 \cb1 \
\cf2 \cb3 //     // alignItems: "center",\cf4 \cb1 \
\cf2 \cb3 //   \},\cf4 \cb1 \
\cf2 \cb3 //   box: \{\cf4 \cb1 \
\cf2 \cb3 //     backgroundColor: "#61dafb",\cf4 \cb1 \
\cf2 \cb3 //     width: 50,\cf4 \cb1 \
\cf2 \cb3 //     height: 50,\cf4 \cb1 \
\cf2 \cb3 //     borderRadius: 4,\cf4 \cb1 \
\cf2 \cb3 //     position: "absolute", \cf4 \cb1 \
\cf2 \cb3 //   \},\cf4 \cb1 \
\cf2 \cb3 // \});\cf4 \cb1 \
\
\cf2 \cb3 // export default DraggableView;\cf4 \cb1 \
\
\
\
\pard\pardeftab720\sl360\partightenfactor0
\cf5 \cb3 import\cf4  \cf6 React\cf4 , \{ \cf6 Component\cf4  \} \cf5 from\cf4  \cf7 "react"\cf4 ;\cb1 \
\cf5 \cb3 import\cf4  \{ \cf6 Animated\cf4 , \cf6 View\cf4 , \cf6 StyleSheet\cf4 , \cf6 PanResponder\cf4 , \cf6 Text\cf4  \} \cf5 from\cf4  \cf7 "react-native"\cf4 ;\cb1 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf8 \cb3 class\cf4  \cf9 App\cf4  \cf8 extends\cf4  \cf9 Component\cf4  \{\cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3   \cf6 pan\cf4  = \cf8 new\cf4  \cf9 Animated\cf4 .\cf9 ValueXY\cf4 ();\cb1 \
\cb3   \cf6 crrY\cf4  = \cf10 0\cf4 ;\cb1 \
\cb3   \cf6 panResponder\cf4  = \cf9 PanResponder\cf4 .\cf11 create\cf4 (\{\cb1 \
\cb3     \cf11 onMoveShouldSetPanResponder\cf6 :\cf4  () \cf8 =>\cf4  \cf8 true\cf4 ,\cb1 \
\cb3     \cf11 onPanResponderGrant\cf6 :\cf4  (\cf6 e\cf4 , \cf6 gestureState\cf4 ) \cf8 =>\cf4  \{\cb1 \
\cb3       \cf6 console\cf4 .\cf11 log\cf4 (\cf7 "onPanResponderGrant"\cf4 )\cb1 \
\cb3       \cf6 console\cf4 .\cf11 log\cf4 (\cf8 this\cf4 .\cf6 crrY\cf4 )\cb1 \
\cb3       \cf8 this\cf4 .\cf6 pan\cf4 .\cf11 setOffset\cf4 (\{\cb1 \
\cb3         \cf6 x:\cf4  \cf10 0\cf4 ,\cb1 \
\cb3         \cf6 y:\cf4  \cf8 this\cf4 .\cf6 crrY\cf4 \cb1 \
\cb3       \});\cb1 \
\cb3     \},\cb1 \
\cb3     \cf11 onPanResponderMove\cf6 :\cf4  \cf9 Animated\cf4 .\cf11 event\cf4 ([\cb1 \
\cb3       \cf8 null\cf4 ,\cb1 \
\cb3       \{ \cf6 dx:\cf4  \cf8 this\cf4 .\cf6 pan\cf4 .\cf6 x\cf4 , \cf6 dy:\cf4  \cf8 this\cf4 .\cf6 pan\cf4 .\cf6 y\cf4  \}\cb1 \
\cb3     ], \cb1 \
\cb3     \{\cf11 listener\cf6 :\cf4  (\cf6 event\cf4 , \cf6 gestureState\cf4 ) \cf8 =>\cf4  \{\cb1 \
\cb3       \cf2 // console.log("onPanResponderMove")\cf4 \cb1 \
\cb3       \cf2 // console.log(this.crrY)\cf4 \cb1 \
\cb3       \cf2 // this.crrY = this.pan.y._value;\cf4 \cb1 \
\cb3     \}\},\cb1 \
\cb3     ),\cb1 \
\cb3     \cf11 onPanResponderRelease\cf6 :\cf4  (\cf6 e\cf4 , \cf6 gestureState\cf4 ) \cf8 =>\cf4  \{\cb1 \
\cb3       \cf6 console\cf4 .\cf11 log\cf4 (\cf7 "onPanResponderRelease"\cf4 )\cb1 \
\cb3       \cf2 // console.log(this.pan.y._value);\cf4 \cb1 \
\cb3       \cf6 console\cf4 .\cf11 log\cf4 (\cf6 gestureState\cf4 .\cf6 dy\cf4 );\cb1 \
\cb3       \cf2 // console.log(gestureState.);\cf4 \cb1 \
\cb3       \cf8 this\cf4 .\cf6 crrY\cf4  = \cf8 this\cf4 .\cf6 pan\cf4 .\cf6 y\cf4 .\cf6 _value\cf4  + \cf8 this\cf4 .\cf6 crrY\cf4 ;\cb1 \
\cb3       \cf6 console\cf4 .\cf11 log\cf4 (\cf8 this\cf4 .\cf6 crrY\cf4 );\cb1 \
\cb3       \cf9 Animated\cf4 .\cf11 spring\cf4 (\cb1 \
\cb3         \cf8 this\cf4 .\cf6 pan\cf4 , \cf2 // Auto-multiplexed\cf4 \cb1 \
\cb3         \{ \cf6 toValue:\cf4  \{ \cf6 x:\cf4  \cf10 0\cf4 , \cf6 y:\cf4  \cf8 this\cf4 .\cf6 pan\cf4 .\cf6 y\cf4 .\cf6 _value\cf4  + \cf8 this\cf4 .\cf6 crrY\cf4 \} \} \cf2 // Back to zero\cf4 \cb1 \
\cb3       ).\cf11 start\cf4 ();\cb1 \
\cb3     \},\cb1 \
\
\cb3   \});\cb1 \
\
\cb3   \cf11 render\cf4 () \{\cb1 \
\cb3     \cf5 return\cf4  (\cb1 \
\cb3       \cf12 <\cf9 View\cf4  \cf6 style\cf4 =\cf8 \{\cf13 styles\cf4 .\cf6 container\cf8 \}\cf12 >\cf4 \cb1 \
\cb3         \cf12 <\cf9 Text\cf4  \cf6 style\cf4 =\cf8 \{\cf13 styles\cf4 .\cf6 titleText\cf8 \}\cf12 >\cf4 Drag this box!\cf12 </\cf9 Text\cf12 >\cf4 \cb1 \
\cb3         \cf12 <\cf9 Animated.View\cf4 \cb1 \
\cb3           \cf6 style\cf4 =\cf8 \{\cf4 \{\cb1 \
\cb3             \cf6 transform:\cf4  [\{ \cf6 translateX:\cf4  \cf8 this\cf4 .\cf6 pan\cf4 .\cf6 x\cf4  \}, \{ \cf6 translateY:\cf4  \cf8 this\cf4 .\cf6 pan\cf4 .\cf6 y\cf4  \}]\cb1 \
\cb3           \}\cf8 \}\cf4 \cb1 \
\cb3           \cf8 \{\cf4 ...\cf8 this\cf4 .\cf6 panResponder\cf4 .\cf6 panHandlers\cf8 \}\cf4 \cb1 \
\cb3         \cf12 >\cf4 \cb1 \
\cb3           \cf12 <\cf9 View\cf4  \cf6 style\cf4 =\cf8 \{\cf13 styles\cf4 .\cf6 box\cf8 \}\cf4  \cf12 />\cf4 \cb1 \
\cb3         \cf12 </\cf9 Animated.View\cf12 >\cf4 \cb1 \
\cb3       \cf12 </\cf9 View\cf12 >\cf4 \cb1 \
\cb3     );\cb1 \
\cb3   \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf8 \cb3 const\cf4  \cf13 styles\cf4  = \cf9 StyleSheet\cf4 .\cf11 create\cf4 (\{\cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3   \cf6 container:\cf4  \{\cb1 \
\cb3     \cf6 flex:\cf4  \cf10 1\cf4 ,\cb1 \
\cb3     \cf2 // alignItems: "center",\cf4 \cb1 \
\cb3     \cf2 // justifyContent: "center"\cf4 \cb1 \
\cb3   \},\cb1 \
\cb3   \cf6 titleText:\cf4  \{\cb1 \
\cb3     \cf6 fontSize:\cf4  \cf10 14\cf4 ,\cb1 \
\cb3     \cf6 lineHeight:\cf4  \cf10 24\cf4 ,\cb1 \
\cb3     \cf6 fontWeight:\cf4  \cf7 "bold"\cf4 \cb1 \
\cb3   \},\cb1 \
\cb3   \cf6 box:\cf4  \{\cb1 \
\cb3     \cf6 height:\cf4  \cf10 150\cf4 ,\cb1 \
\cb3     \cf6 width:\cf4  \cf10 150\cf4 ,\cb1 \
\cb3     \cf6 backgroundColor:\cf4  \cf7 "blue"\cf4 ,\cb1 \
\cb3     \cf6 borderRadius:\cf4  \cf10 5\cf4 \cb1 \
\cb3   \}\cb1 \
\cb3 \});\cb1 \
\
\cf5 \cb3 export\cf4  \cf5 default\cf4  \cf9 App\cf4 ;\cb1 \
}